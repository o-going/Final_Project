<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.js"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.css" rel="stylesheet" type="text/css" />
   <!--Bootstrap-->
   <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
   <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
   <script src="https://code.jquery.com/jquery-3.5.1.min.js" crossorigin="anonymous"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
   <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
   
   <link rel="stylesheet" href="css/style.css">
   <link rel="stylesheet" href="css/techtree.css">
   <link rel="preconnect" href="https://fonts.gstatic.com">
   <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700;900&display=swap" rel="stylesheet">
   <title>Document</title>
</head>
<body>
  <!-- Navigation-->
  <nav id="menu" class="navbar navbar-default navbar-fixed-top">
    <div class="container"> 

      <div class="navbar-brand" id="bs-example-navbar-collapse-1">
        <ul class="nav navbar-nav navbar-right">
          <li><a href="techtree" class="page-scroll">TechTree</a></li>
          <li><a href="Login" class="page-scroll">Login</a></li>
        </ul>
      </div>
    </div>
  </nav>
  <!-- <p>
    Scale nodes and edges depending on their value. Hover over nodes and edges to
    get more information.
  </p> -->
  <div id="optionsContainer"></div>
  <div id="mynetwork">
  </div>
  <div class="right">
    <div class="skill">
      <div class="company_co text-center">
        <h1>선택 기술</h1>
        <p>Java, JavaScript, Python, MySQL, Node.js</p>
      </div>
    </div>

    <div class="position">
      <div class="company_co text-center">
        <h1>관련 직무</h1>
        <p>서버/백엔드, 프론트엔드, 웹 풀스택, 안드로이드 앱, 데이터 엔지니어</p>
      </div>
    </div>

    <div class="company_co text-center">
      <h1>기업 추천</h1>
      <p>선택된 기술들에 관한 구인공고</p>
    </div>
    <% for(i in reco) { %>
      <% let r = reco[i] %>
        <div class="reco-list">
          <a href="/require/<%=r.positionId%>">
            <div class="pictures">
              <img src="<%=r.logo%>">
            
              <div class="caption">
                <h4><%= r.position %></h4>
                <p class="company"><%=r.company %></p>
                <p>Java, 안드로이드 앱 <b>92%</b></p>
              </div>
            </div>
          </a>
        </div>
    <% } %>
  </div>
  <script>
    var nodes = null;
    var edges = null;
    var network = null;

  function draw(nodes, edges) {
  // create people.
  // value corresponds with the age of the person

  // Instantiate our network object.
/*
  var container = document.getElementById("mynetwork");
  var data = {
    nodes: nodes,
    edges: edges,
  };
  var options = {
    nodes: {
      shape: "dot",
      scaling: {
        customScalingFunction: function (min, max, total, value) {
          return value / total;
        },
        min: 1,
        max: 1,
      },
    },
    layout: {
      improvedLayout: false
    },
    physics: false,
  };
  network = new vis.Network(container, data, options);
*/
 
  var container = document.getElementById("mynetwork");
  var options = {
    nodes: {
      // color: '#000000',
      shape: "dot",
      scaling: {
        min: 10,
        max: 100,
        // label: {
        //   min: 12,
        //   max: 30,
        //   drawThreshold: 12,
        //   maxVisible: 50,
        // },
      },
      font: {
        size: 24,
        face: "Tahoma",
        bold: {
          size: 30,
          vadjust: 0,
          mod: 'bold'
        }
      },
    },
    edges: {
      width: 0.10,
      color: { inherit: true },
      smooth: {
        type: "continuous",
      },
    },
    physics: false,
    interaction: {
      tooltipDelay: 200,
      hideEdgesOnDrag: true,
      //hideEdgesOnZoom: true,
    },
    layout: {
      improvedLayout: false
    },
  };

  var data = { nodes: nodes, edges: edges };
  // Note: data is coming from ./data/WorldCup2014.js
  network = new vis.Network(container, data, options);
  
}

window.addEventListener("load", () => {
  fetch("/dataset")
    .then(response => response.json())
    .then(json => {
      console.log(json.nodes, json.edges);
      draw(json.nodes, json.edges);
    });
});

  </script>
</body>
</html>